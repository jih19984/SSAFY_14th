# 문제
"""
시간제한 0.5초

라그랑주는 모든 자연수는 넷 혹은 그 이하의 제곱수의 합으로 표현할 수 있다고 증명하였다.
자연수 n이 주어질 때, n을 최소 개수의 제곱수의 합으로 표현하는 컴퓨터 프로그램을 작성하시오.
1 <= n <= 50,000
"""

# 풀이 방법
"""
30의 경우 30의 루트를 씌운값과 가장 가까운 값을 찾아보자
30 = 5^2 + 2^2 + 1^2

예외 케이스
12 = 2^2 + 2^2 + 2^2

-> 더 작은 제곱 수를 더한게 최적일 수 있다.

따라서 각 수에서 제곱수를 하나씩 빼면서 모두 확인해봐야 알 수 있다.

1 = 1^2     :1
2 = 1^2 + 1^2   :2
3 = 1^2 + 1^2 + 1^2 :3
4 = 2^2 :1
5 = 1^2 + 2^2 : 2
6 = 1^2 + 1^2 + 2^2 : 3
7 = 1^2 + 1^2 + 1^2 + 2^2 : 4
8 = 2^2 + 2^2 : 2
9 = 3^2 : 1
10 = 1^2 + 3^2 : 2
11 = 9 + 2 or 10 + 1 : 3
12 = 2^2 + 2^2 + 2^2 : 3
13 = 3^2 + 2^2 : 2
15 = 1^2 + 12 : 4

아래의 경우는 결국 모든 제곱수를 하나씩 빼면서 전부를 보지만,
다른 코드를 검색해본 결과,
1) N이 제곱수일 때 결과 1
2) N이 제곱수를 뺀 값에서 또 제곱수가 포함되어있으면 결과 2 (이중 for문)
3) N이 7 15 23 마다 4개의 원소 합으로 이루어져있음. 결과 4
4) 이외에 전부 3
"""

import sys
input = sys.stdin.readline

N = int(input())

dp = [0] * (N+1)

for i in range(1, N+1):
    # 제곱수의 개수는 최대 4개를 넘지 않음
    dp[i] = 4

    # 가장 작은 제곱수 먼저 체크
    check = 1

    while check*check <= i:
        dp[i] = min(dp[i], dp[i-(check*check)]+1)
        check += 1

print(dp[N])